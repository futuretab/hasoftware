package hasoftware.server.data.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import hasoftware.server.data.ActiveEvent;
import hasoftware.server.data.DeviceType;
import hasoftware.server.data.Node;
import hasoftware.server.data.OutputDevice;

/**
 * Class _Device was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Device extends CayenneDataObject {

    public static final String ADDRESS_PROPERTY = "address";
    public static final String CREATED_ON_PROPERTY = "createdOn";
    public static final String MESSAGE1_PROPERTY = "message1";
    public static final String MESSAGE2_PROPERTY = "message2";
    public static final String NAME_PROPERTY = "name";
    public static final String PRIORITY_PROPERTY = "priority";
    public static final String UPDATED_ON_PROPERTY = "updatedOn";
    public static final String DEVICE_TYPE_PROPERTY = "deviceType";
    public static final String NODE_PROPERTY = "node";
    public static final String OUTPUT_DEVICES_PROPERTY = "outputDevices";
    public static final String UNTITLED_REL_PROPERTY = "untitledRel";
    public static final String UNTITLED_REL1_PROPERTY = "untitledRel1";

    public static final String ID_PK_COLUMN = "ID";

    public void setAddress(String address) {
        writeProperty(ADDRESS_PROPERTY, address);
    }
    public String getAddress() {
        return (String)readProperty(ADDRESS_PROPERTY);
    }

    public void setCreatedOn(Long createdOn) {
        writeProperty(CREATED_ON_PROPERTY, createdOn);
    }
    public Long getCreatedOn() {
        return (Long)readProperty(CREATED_ON_PROPERTY);
    }

    public void setMessage1(String message1) {
        writeProperty(MESSAGE1_PROPERTY, message1);
    }
    public String getMessage1() {
        return (String)readProperty(MESSAGE1_PROPERTY);
    }

    public void setMessage2(String message2) {
        writeProperty(MESSAGE2_PROPERTY, message2);
    }
    public String getMessage2() {
        return (String)readProperty(MESSAGE2_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setPriority(Integer priority) {
        writeProperty(PRIORITY_PROPERTY, priority);
    }
    public Integer getPriority() {
        return (Integer)readProperty(PRIORITY_PROPERTY);
    }

    public void setUpdatedOn(Long updatedOn) {
        writeProperty(UPDATED_ON_PROPERTY, updatedOn);
    }
    public Long getUpdatedOn() {
        return (Long)readProperty(UPDATED_ON_PROPERTY);
    }

    public void setDeviceType(DeviceType deviceType) {
        setToOneTarget(DEVICE_TYPE_PROPERTY, deviceType, true);
    }

    public DeviceType getDeviceType() {
        return (DeviceType)readProperty(DEVICE_TYPE_PROPERTY);
    }


    public void setNode(Node node) {
        setToOneTarget(NODE_PROPERTY, node, true);
    }

    public Node getNode() {
        return (Node)readProperty(NODE_PROPERTY);
    }


    public void addToOutputDevices(OutputDevice obj) {
        addToManyTarget(OUTPUT_DEVICES_PROPERTY, obj, true);
    }
    public void removeFromOutputDevices(OutputDevice obj) {
        removeToManyTarget(OUTPUT_DEVICES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<OutputDevice> getOutputDevices() {
        return (List<OutputDevice>)readProperty(OUTPUT_DEVICES_PROPERTY);
    }


    public void addToUntitledRel(ActiveEvent obj) {
        addToManyTarget(UNTITLED_REL_PROPERTY, obj, true);
    }
    public void removeFromUntitledRel(ActiveEvent obj) {
        removeToManyTarget(UNTITLED_REL_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ActiveEvent> getUntitledRel() {
        return (List<ActiveEvent>)readProperty(UNTITLED_REL_PROPERTY);
    }


    public void addToUntitledRel1(ActiveEvent obj) {
        addToManyTarget(UNTITLED_REL1_PROPERTY, obj, true);
    }
    public void removeFromUntitledRel1(ActiveEvent obj) {
        removeToManyTarget(UNTITLED_REL1_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ActiveEvent> getUntitledRel1() {
        return (List<ActiveEvent>)readProperty(UNTITLED_REL1_PROPERTY);
    }


}
