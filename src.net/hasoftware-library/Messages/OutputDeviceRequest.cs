//
// DO NOT EDIT THIS FILE - CONSTRUCTED ON 28/04/2014 1:27:52 AM
//

using System;
using System.Collections.Generic;
using hasoftware.Api;
using hasoftware.Classes;
using hasoftware.Cdef;

namespace hasoftware.Messages {
   public class OutputDeviceRequest : Message {
      public int Action { get; set; }
      public List<int> Ids { get; set; }
      public List<OutputDevice> OutputDevices { get; set; }

      public OutputDeviceRequest() {
         FunctionCode = Api.FunctionCode.OutputDevice;
         Ids = new List<int>();
         OutputDevices = new List<OutputDevice>();
      }

      public OutputDeviceRequest(CdefMessage cdefMessage) : base(cdefMessage) {
         Action = cdefMessage.GetInt();
         {
            Ids = new List<int>();
            int c = cdefMessage.GetInt();
            for (int i=0; i<c; i++) {
               Ids.Add(cdefMessage.GetInt());
            }
         }
         {
            OutputDevices = new List<OutputDevice>();
            int c = cdefMessage.GetInt();
            for (int i=0; i<c; i++) {
               OutputDevices.Add(new OutputDevice(cdefMessage));
            }
         }
      }

      public override void Encode(CdefMessage cdefMessage) {
         base.Encode(cdefMessage);
         cdefMessage.PutInt(Action);
         cdefMessage.PutInt(Ids.Count);
         foreach (var obj in Ids) {
            cdefMessage.PutInt(obj);
         }
         cdefMessage.PutInt(OutputDevices.Count);
         foreach (var obj in OutputDevices) {
            obj.Encode(cdefMessage);
         }
      }

      public OutputDeviceResponse CreateResponse() {
         OutputDeviceResponse response = new OutputDeviceResponse(TransactionNumber);
         return response;
      }
   }
}
