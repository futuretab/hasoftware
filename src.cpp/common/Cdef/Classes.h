//
// DO NOT EDIT THIS FILE - CONSTRUCTED ON 11/04/2015 3:01:58 PM
//

#ifndef CLASSES_H
#define CLASSES_H

#include <list>
#include <string>

#include "CdefMessage.h"

namespace hasoftware {

   class DeviceType {
   private:
      int _id;
      std::string _code;

   public:
      DeviceType() {
      }

      DeviceType(HASoftware::CdefMessage &cdefMessage) {
         _id = cdefMessage.GetInt();
         _code = cdefMessage.GetString();
      }

      int GetId() { return _id; }
      void SetId(int id) { _id = id; }

      std::string GetCode() { return _code; }
      void SetCode(std::string code) { _code = code; }

      void Encode(HASoftware::CdefMessage &cdefMessage) {
         cdefMessage.PutInt(_id);
         cdefMessage.PutString(_code);
      }

   };

   class InputMessage {
   private:
      int _id;
      std::string _deviceTypeCode;
      std::string _data;
      long _createdOn;

   public:
      InputMessage() {
      }

      InputMessage(HASoftware::CdefMessage &cdefMessage) {
         _id = cdefMessage.GetInt();
         _deviceTypeCode = cdefMessage.GetString();
         _data = cdefMessage.GetString();
         _createdOn = cdefMessage.GetLong();
      }

      int GetId() { return _id; }
      void SetId(int id) { _id = id; }

      std::string GetDeviceTypeCode() { return _deviceTypeCode; }
      void SetDeviceTypeCode(std::string deviceTypeCode) { _deviceTypeCode = deviceTypeCode; }

      std::string GetData() { return _data; }
      void SetData(std::string data) { _data = data; }

      long GetCreatedOn() { return _createdOn; }
      void SetCreatedOn(long createdOn) { _createdOn = createdOn; }

      void Encode(HASoftware::CdefMessage &cdefMessage) {
         cdefMessage.PutInt(_id);
         cdefMessage.PutString(_deviceTypeCode);
         cdefMessage.PutString(_data);
         cdefMessage.PutLong(_createdOn);
      }

   };

   class OutputMessage {
   private:
      int _id;
      std::string _deviceTypeCode;
      std::string _data;
      long _createdOn;

   public:
      OutputMessage() {
      }

      OutputMessage(HASoftware::CdefMessage &cdefMessage) {
         _id = cdefMessage.GetInt();
         _deviceTypeCode = cdefMessage.GetString();
         _data = cdefMessage.GetString();
         _createdOn = cdefMessage.GetLong();
      }

      int GetId() { return _id; }
      void SetId(int id) { _id = id; }

      std::string GetDeviceTypeCode() { return _deviceTypeCode; }
      void SetDeviceTypeCode(std::string deviceTypeCode) { _deviceTypeCode = deviceTypeCode; }

      std::string GetData() { return _data; }
      void SetData(std::string data) { _data = data; }

      long GetCreatedOn() { return _createdOn; }
      void SetCreatedOn(long createdOn) { _createdOn = createdOn; }

      void Encode(HASoftware::CdefMessage &cdefMessage) {
         cdefMessage.PutInt(_id);
         cdefMessage.PutString(_deviceTypeCode);
         cdefMessage.PutString(_data);
         cdefMessage.PutLong(_createdOn);
      }

   };

   class Location {
   private:
      int _id;
      int _parentId;
      std::string _name;
      long _createdOn;
      long _updatedOn;

   public:
      Location() {
      }

      Location(HASoftware::CdefMessage &cdefMessage) {
         _id = cdefMessage.GetInt();
         _parentId = cdefMessage.GetInt();
         _name = cdefMessage.GetString();
         _createdOn = cdefMessage.GetLong();
         _updatedOn = cdefMessage.GetLong();
      }

      int GetId() { return _id; }
      void SetId(int id) { _id = id; }

      int GetParentId() { return _parentId; }
      void SetParentId(int parentId) { _parentId = parentId; }

      std::string GetName() { return _name; }
      void SetName(std::string name) { _name = name; }

      long GetCreatedOn() { return _createdOn; }
      void SetCreatedOn(long createdOn) { _createdOn = createdOn; }

      long GetUpdatedOn() { return _updatedOn; }
      void SetUpdatedOn(long updatedOn) { _updatedOn = updatedOn; }

      void Encode(HASoftware::CdefMessage &cdefMessage) {
         cdefMessage.PutInt(_id);
         cdefMessage.PutInt(_parentId);
         cdefMessage.PutString(_name);
         cdefMessage.PutLong(_createdOn);
         cdefMessage.PutLong(_updatedOn);
      }

   };

   class OutputDevice {
   private:
      int _id;
      std::string _name;
      std::string _description;
      std::string _address;
      std::string _deviceTypeCode;
      std::string _serialNumber;
      long _createdOn;
      long _updatedOn;

   public:
      OutputDevice() {
      }

      OutputDevice(HASoftware::CdefMessage &cdefMessage) {
         _id = cdefMessage.GetInt();
         _name = cdefMessage.GetString();
         _description = cdefMessage.GetString();
         _address = cdefMessage.GetString();
         _deviceTypeCode = cdefMessage.GetString();
         _serialNumber = cdefMessage.GetString();
         _createdOn = cdefMessage.GetLong();
         _updatedOn = cdefMessage.GetLong();
      }

      int GetId() { return _id; }
      void SetId(int id) { _id = id; }

      std::string GetName() { return _name; }
      void SetName(std::string name) { _name = name; }

      std::string GetDescription() { return _description; }
      void SetDescription(std::string description) { _description = description; }

      std::string GetAddress() { return _address; }
      void SetAddress(std::string address) { _address = address; }

      std::string GetDeviceTypeCode() { return _deviceTypeCode; }
      void SetDeviceTypeCode(std::string deviceTypeCode) { _deviceTypeCode = deviceTypeCode; }

      std::string GetSerialNumber() { return _serialNumber; }
      void SetSerialNumber(std::string serialNumber) { _serialNumber = serialNumber; }

      long GetCreatedOn() { return _createdOn; }
      void SetCreatedOn(long createdOn) { _createdOn = createdOn; }

      long GetUpdatedOn() { return _updatedOn; }
      void SetUpdatedOn(long updatedOn) { _updatedOn = updatedOn; }

      void Encode(HASoftware::CdefMessage &cdefMessage) {
         cdefMessage.PutInt(_id);
         cdefMessage.PutString(_name);
         cdefMessage.PutString(_description);
         cdefMessage.PutString(_address);
         cdefMessage.PutString(_deviceTypeCode);
         cdefMessage.PutString(_serialNumber);
         cdefMessage.PutLong(_createdOn);
         cdefMessage.PutLong(_updatedOn);
      }

   };

   class Point {
   private:
      int _id;
      int _nodeId;
      std::string _name;
      std::string _address;
      std::string _deviceTypeCode;
      std::string _message1;
      std::string _message2;
      int _priority;
      long _createdOn;
      long _updatedOn;
      std::list<OutputDevice*> _outputDevices;

   public:
      Point() {
      }

      Point(HASoftware::CdefMessage &cdefMessage) {
         _id = cdefMessage.GetInt();
         _nodeId = cdefMessage.GetInt();
         _name = cdefMessage.GetString();
         _address = cdefMessage.GetString();
         _deviceTypeCode = cdefMessage.GetString();
         _message1 = cdefMessage.GetString();
         _message2 = cdefMessage.GetString();
         _priority = cdefMessage.GetInt();
         _createdOn = cdefMessage.GetLong();
         _updatedOn = cdefMessage.GetLong();
         {
            int count = cdefMessage.GetInt();
            while (count > 0) {
               _outputDevices.push_back(new OutputDevice(cdefMessage));
               count--;
            }
         }
      }

      int GetId() { return _id; }
      void SetId(int id) { _id = id; }

      int GetNodeId() { return _nodeId; }
      void SetNodeId(int nodeId) { _nodeId = nodeId; }

      std::string GetName() { return _name; }
      void SetName(std::string name) { _name = name; }

      std::string GetAddress() { return _address; }
      void SetAddress(std::string address) { _address = address; }

      std::string GetDeviceTypeCode() { return _deviceTypeCode; }
      void SetDeviceTypeCode(std::string deviceTypeCode) { _deviceTypeCode = deviceTypeCode; }

      std::string GetMessage1() { return _message1; }
      void SetMessage1(std::string message1) { _message1 = message1; }

      std::string GetMessage2() { return _message2; }
      void SetMessage2(std::string message2) { _message2 = message2; }

      int GetPriority() { return _priority; }
      void SetPriority(int priority) { _priority = priority; }

      long GetCreatedOn() { return _createdOn; }
      void SetCreatedOn(long createdOn) { _createdOn = createdOn; }

      long GetUpdatedOn() { return _updatedOn; }
      void SetUpdatedOn(long updatedOn) { _updatedOn = updatedOn; }

      std::list<OutputDevice*>& GetOutputDevices() { return _outputDevices; }

      void Encode(HASoftware::CdefMessage &cdefMessage) {
         cdefMessage.PutInt(_id);
         cdefMessage.PutInt(_nodeId);
         cdefMessage.PutString(_name);
         cdefMessage.PutString(_address);
         cdefMessage.PutString(_deviceTypeCode);
         cdefMessage.PutString(_message1);
         cdefMessage.PutString(_message2);
         cdefMessage.PutInt(_priority);
         cdefMessage.PutLong(_createdOn);
         cdefMessage.PutLong(_updatedOn);
         cdefMessage.PutInt(_outputDevices.size());
         for (std::list<OutputDevice*>::iterator it=_outputDevices.begin(); it!=_outputDevices.end(); ++it) {
            (*it)->Encode(cdefMessage);
         }
      }

   };

   class CurrentEvent {
   private:
      int _id;
      Point _point;
      long _createdOn;
      long _updatedOn;

   public:
      CurrentEvent() {
      }

      CurrentEvent(HASoftware::CdefMessage &cdefMessage) {
         _id = cdefMessage.GetInt();
         _point = new Point(cdefMessage);
         _createdOn = cdefMessage.GetLong();
         _updatedOn = cdefMessage.GetLong();
      }

      int GetId() { return _id; }
      void SetId(int id) { _id = id; }

      Point GetPoint() { return _point; }
      void SetPoint(Point point) { _point = point; }

      long GetCreatedOn() { return _createdOn; }
      void SetCreatedOn(long createdOn) { _createdOn = createdOn; }

      long GetUpdatedOn() { return _updatedOn; }
      void SetUpdatedOn(long updatedOn) { _updatedOn = updatedOn; }

      void Encode(HASoftware::CdefMessage &cdefMessage) {
         cdefMessage.PutInt(_id);
         _point.Encode(cdefMessage);
         cdefMessage.PutLong(_createdOn);
         cdefMessage.PutLong(_updatedOn);
      }

   };

}

#endif
